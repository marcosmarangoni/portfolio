{"version":3,"sources":["utils/scripts.js","components/portfolio/Header.tsx","components/portfolio/Footer.tsx","img/bg-masthead.jpg","img/himarket-portal-demonstration.gif","components/portfolio/Home.tsx","enums/VertexTypes.ts","components/data_structure_visualizer/NodeUI.tsx","collections/MinHeap.ts","collections/Node.ts","algorithms/Dijkstra.ts","algorithms/MazeGeneratorRecursiveDivision.ts","components/data_structure_visualizer/DataStructureVisualizer.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["navbarCollapse","$","offset","top","addClass","removeClass","smoothScrolling","e","window","location","pathname","replace","this","hostname","target","hash","length","slice","animate","scrollTop","on","collapse","scrollspy","Header","className","id","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","href","role","aria-haspopup","aria-labelledby","Footer","Fragment","Home","VertexTypes","style","background","MastheadBg","download","src","HimarketPortalDemonstration","alt","Node","props","useState","VERTEX","nodeType","setNodeType","useEffect","START_VERTEX","END_VERTEX","VISITED_VERTICE","SHORT_PATH","WALL","getNodeClassByType","onMouseMove","row","col","MinHeap","selector","items","index1","index2","tmp","item","i","push","parentIndex","Math","floor","parentVal","pushedVal","swap","max","pop","ret","temp","rightChildIndex","leftChildIndex","lowest","isEmpty","undefined","distance","Infinity","vertexType","previous","Dijkstra","grid","startNode","endNode","minHeap","gridRows","gridCols","value","insert","visitedNodes","vertice","remove","verticeNeighbors","getNeighbors","isWall","isEndVertex","peek","currentNode","shortestPath","console","log","neighbors","MazeGeneratorRecursiveDivision","rows","cols","maze","width","height","initArray","forEach","r","cell","c","doorPos","posToSpace","rand","partition","Array","fill","map","min","random","x","array","j","r1","r2","c1","c2","horiz","vert","y","start","end","round","posToWall","gaps","shuffle","gapPosition","DataStructureVisualizer","GRID_SIZE","ROWS","startRow","setStartRow","startCol","setStartCol","endRow","setEndRow","COLS","endCol","setEndCol","from","setGrid","setVisitedNodes","insertWall","setInsertWall","startGrid","tmpGrid","animateShortestPath","newGrid","n","setTimeout","cloneDeep","onMouseUp","display","alignItems","justifyContent","paddingTop","margin","onClick","paths","mazeGenerator","rIdx","cIdx","includes","gridTemplateColumns","gridAutoRows","onMouseDown","onMouseLeave","NodeUI","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.69595530.chunk.js","sourcesContent":["/*!\n    * Start Bootstrap - Grayscale v6.0.3 (https://startbootstrap.com/theme/grayscale)\n    * Copyright 2013-2020 Start Bootstrap\n    * Licensed under MIT (https://github.com/StartBootstrap/startbootstrap-grayscale/blob/master/LICENSE)\n    */\n\nimport $ from 'jquery';\nimport 'bootstrap';\n\n// Collapse Navbar\nfunction navbarCollapse() {\n    if ($(\"#mainNav\").offset().top > 20) {\n        $(\"#mainNav\").addClass(\"navbar-shrink\");\n    } else {\n        $(\"#mainNav\").removeClass(\"navbar-shrink\");\n    }\n};\n\n// Smooth scrolling using jQuery easing\nfunction smoothScrolling(e) {\n    if (window.location.pathname.replace(/^\\//, \"\") === this.pathname.replace(/^\\//, \"\") &&\n        window.location.hostname === this.hostname) {\n        let target = $(this.hash);\n        target = target.length ? target : $(\"[name=\" + this.hash.slice(1) + \"]\");\n        if (target.length) {\n            $(\"html, body\").animate({ scrollTop: target.offset().top - 70 }, 1000, \"swing\");\n            return false;\n        }\n    }\n}\n\n$(() => {\n    // Smooth scrolling using jQuery easing\n    $('a.js-scroll-trigger[href*=\"#\"]:not([href=\"#\"])').on('click', smoothScrolling);\n\n    // Closes responsive menu when a scroll trigger link is clicked\n    $(\".js-scroll-trigger\").on('click', () => $(\".navbar-collapse\").collapse(\"hide\"));\n\n    // Activate scrollspy to add active class to navbar items on scroll\n    $(\"body\").scrollspy({ target: \"#mainNav\", offset: 100 });\n\n    // Collapse now if page is not at top\n    navbarCollapse();\n    // Collapse the navbar when page is scrolled\n    $(window).on('scroll', navbarCollapse);\n});","import React, { useEffect, useState } from 'react';\nimport {\n  Link,\n} from \"react-router-dom\";\n\nfunction Header() {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light fixed-top navbar-shrink\" id=\"mainNav\">\n      <div className=\"container\">\n        <Link className=\"navbar-brand js-scroll-trigger\" to={{ hash:\"#masthead\", pathname:\"/portfolio\" }}>Portfolio</Link>\n        <button className=\"navbar-toggler navbar-toggler-right\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarResponsive\" aria-controls=\"navbarResponsive\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <i className=\"fas fa-bars\"></i>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\n          <ul className=\"navbar-nav ml-auto\">\n            <li className=\"nav-item\">\n              <Link className=\"nav-link js-scroll-trigger\" to={{ hash:\"#projects\", pathname:\"/portfolio\" }}>Projects</Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link className=\"nav-link js-scroll-trigger\" to={{ hash:\"#contacts\", pathname:\"/portfolio\" }}>Contact</Link>\n            </li>\n            <li className=\"nav-item dropdown\">\n              <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"personalProjectsDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                Personal Projects\n              </a>\n              <div className=\"dropdown-menu\" aria-labelledby=\"personalProjectsDropdown\">\n                <Link to=\"/portfolio/dijkstra\" className=\"dropdown-item\">Dijkstra</Link>\n              </div>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n}\n\nexport default Header;","import React, { useEffect, useState } from 'react';\n\nfunction Footer() {\n  return (\n    <React.Fragment>\n      <section className=\"contact-section bg-black\" id=\"contacts\" >\n        <div className=\"container\">\n          <div className=\"row justify-content-center\">\n            <div className=\"col-md-4 mb-3 mb-md-0\">\n              <div className=\"card py-4 h-100\">\n                <div className=\"card-body text-center\">\n                  <i className=\"fas fa-envelope text-primary mb-2\"></i>\n                  <h4 className=\"text-uppercase m-0\">Email</h4>\n                  <hr className=\"my-4\" />\n                  <div className=\"small text-black-50\"><a href=\"#!\">marcosmarangoni2@gmail.com</a></div>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-4 mb-3 mb-md-0\">\n              <div className=\"card py-4 h-100\">\n                <div className=\"card-body text-center\">\n                  <i className=\"fas fa-mobile-alt text-primary mb-2\"></i>\n                  <h4 className=\"text-uppercase m-0\">Phone</h4>\n                  <hr className=\"my-4\" />\n                  <div className=\"small text-black-50\">+1 (236) 991-8915</div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"social d-flex justify-content-center\">\n            <a className=\"mx-2\" href=\"https://www.linkedin.com/in/marcos-eduardo-marangoni-6927318b/\"><i className=\"fab fa-linkedin\"></i></a>\n            <a className=\"mx-2\" href=\"https://github.com/marcosmarangoni\"><i className=\"fab fa-github\"></i></a>\n          </div>\n        </div>\n      </section >\n      {/* Footer */}\n      < footer className=\"footer bg-black small text-center text-white-50\" > <div className=\"container\">Copyright © Marcos Marangoni 2021</div></footer >\n    </React.Fragment>\n  );\n}\n\nexport default Footer;","export default __webpack_public_path__ + \"static/media/bg-masthead.733fe648.jpg\";","export default __webpack_public_path__ + \"static/media/himarket-portal-demonstration.0d7d4131.gif\";","import React, { useEffect, useState } from 'react';\n\nimport MastheadBg from '../../img/bg-masthead.jpg';\nimport HimarketLogo from '../../img/himarket-logo.png';\nimport HimarketPortalDemonstration from '../../img/himarket-portal-demonstration.gif';\n\n\nfunction Home() {\n  return (\n    <React.Fragment>\n      {/* Masthead */}\n      <header className=\"masthead\" id=\"masthead\" style={{ background: `linear-gradient(to bottom, rgba(0, 0, 0, 0.3) 0%, rgba(0, 0, 0, 0.7) 75%, #000000 100%), url(${MastheadBg})` }}>\n        <div className=\"container d-flex h-100 align-items-center\">\n          <div className=\"mx-auto text-center\">\n            <h1 className=\"mx-auto my-0 text-uppercase\">Marcos Marangoni</h1>\n            <h2 className=\"text-white-50 mx-auto mt-2 mb-5\">Ruby and Rails developer, with 2 years of experience in full stack development.</h2>\n            <a className=\"btn btn-primary js-scroll-trigger\" href=\"/Resume.docx\" download>Download Resume</a>\n          </div>\n        </div>\n      </header>\n      {/* Projects */}\n      <section className=\"projects-section bg-light\" id=\"projects\">\n        <div className=\"container\">\n          {/* Project One Row */}\n          <div className=\"row justify-content-center no-gutters mb-5 mb-lg-0\">\n            <div className=\"col-lg-6 justify-content-center\">\n              <div className=\"row\">\n                <img className=\"img-fluid\" src={HimarketPortalDemonstration} alt=\"\" />\n              </div>\n              <div className=\"row justify-content-center mt-5\">\n                {/* <button className=\"btn btn-primary m-2\">CODE</button>\n                <button className=\"btn btn-primary m-2\">DEMO</button> */}\n              </div>\n            </div>\n            <div className=\"col-lg-6\">\n              <div className=\"bg-black text-center h-100 project\">\n                <div className=\"d-flex h-100\">\n                  <div className=\"project-text w-100 my-auto text-center text-lg-left\">\n                    <h4 className=\"text-white\">Tecnologies Used</h4>\n                    <div className=\"row mb-5\">\n                      <div className=\"badge badge-pill badge-primary m-1\">Vue.js</div>\n                      <div className=\"badge badge-pill badge-primary m-1\">Ruby on Rails</div>\n                      <div className=\"badge badge-pill badge-primary m-1\">Google Cloud</div>\n                      <div className=\"badge badge-pill badge-primary m-1\">Kubernetes</div>\n                      <div className=\"badge badge-pill badge-primary m-1\">Docker</div>\n                    </div>\n                    <h4 className=\"text-white\">HiMarket (2018-2020)</h4>\n                    <p className=\"mb-0 text-white-50\">\n                      Worked in a project with Ruby and Rails, for the backend, and Vue.js, for the frontend.\n                      The project was based on building a portal to provide automated data analysis to clients.\n                      I had to build a dynamic filter, and work with a third party graph library called Metabase.\n                    </p>\n                    <hr className=\"d-none d-lg-block mb-0 ml-0\" />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default Home;","enum VertexTypes {\n  START_VERTEX = 0,\n  END_VERTEX = 1,\n  VERTEX = 2,\n  VISITED_VERTICE = 3,\n  SHORT_PATH = 4,\n  WALL = 5\n}\n\nexport default VertexTypes;","import React, {useEffect, useState} from 'react';\nimport VertexTypes from '../../enums/VertexTypes';\n\ninterface NodeProps {\n  type: VertexTypes,\n  row: number,\n  col: number,\n  onMouseDown?: Function,\n  onMouseUp?: Function,\n  onMouseMove: Function\n}\n\nfunction Node(props: NodeProps) {\n\n  const [nodeType, setNodeType] = useState(VertexTypes.VERTEX)\n\n  useEffect(() => {\n    setNodeType(props.type);\n  }, [])\n\n  const getNodeClassByType = (): string => {\n    switch(nodeType) {\n      case VertexTypes.START_VERTEX:\n        return 'node-start';\n      case VertexTypes.END_VERTEX:\n        return 'node-end';\n      case VertexTypes.VISITED_VERTICE:\n        return 'node-visited';\n      case VertexTypes.SHORT_PATH:\n        return 'short-path';\n      case VertexTypes.WALL:\n        return 'wall';\n      default:\n        return 'node-default';\n    }\n  }\n\n  return(\n    <div\n     className={`${getNodeClassByType()} node`} \n     onMouseMove={(e) => props.onMouseMove(props.row, props.col)}>\n    </div>\n  );\n}\n\nexport default Node;","class MinHeap<T> {\n\n  items: Array<T>;\n  selector: Function;\n\n  constructor(selector: Function) {\n    this.items = [];\n    this.selector = selector;\n  }\n\n  swap(index1: number, index2: number) {\n    let tmp: T = this.items[index1];\n    this.items[index1] = this.items[index2]\n    this.items[index2] = tmp;\n  }\n\n  insert(item: T) {\n    let i = this.items.length;\n    this.items.push(item);\n    let parentIndex = Math.floor((i + 1) / 2 - 1);\n    if (parentIndex < 0) parentIndex = 0;\n    let parentVal = this.selector(this.items[parentIndex]);\n    const pushedVal = this.selector(this.items[i]);\n    while (i > 0 && parentVal > pushedVal) {\n      parentIndex = Math.floor((i + 1) / 2 - 1);\n      this.swap(i, parentIndex);\n      i = parentIndex;\n      parentVal = this.selector(\n        this.items[Math.max(Math.floor((i + 1) / 2 - 1), 0)]\n      );\n    }\n  }\n\n  remove(): T | undefined {\n    if (this.items.length <= 1) return this.items.pop();\n    const ret = this.items[0]; // What we will return\n    let temp = this.items.pop();\n    if(!temp) return undefined;\n    this.items[0] = temp; // Place last element in array at front\n    let i = 0; // We adjust heap from top to down\n    while (true) {\n      let rightChildIndex = (i + 1) * 2;\n      let leftChildIndex = (i + 1) * 2 - 1;\n      let lowest = rightChildIndex;\n      if (\n        leftChildIndex >= this.items.length &&\n        rightChildIndex >= this.items.length\n      )\n        break;\n      if (leftChildIndex >= this.items.length) lowest = rightChildIndex;\n      if (rightChildIndex >= this.items.length) lowest = leftChildIndex;\n      if (!(leftChildIndex >= this.items.length) &&\n        !(rightChildIndex >= this.items.length)\n      ) {\n        lowest =\n          this.selector(this.items[rightChildIndex]) <\n            this.selector(this.items[leftChildIndex])\n            ? rightChildIndex\n            : leftChildIndex;\n      } // Find the smallest child\n      // If the parent is greater than the smallest child: swap\n      if (this.selector(this.items[i]) > this.selector(this.items[lowest])) {\n        this.swap(i, lowest);\n        i = lowest;\n      } else break; // We have finished setting up the heap\n    }\n    // Return topmost element\n    return ret;\n  }\n\n  isEmpty(): boolean{\n    return this.items.length === 0\n  }\n\n  peek(): T | undefined {\n    return this.isEmpty() ? undefined : this.items[0];\n  }\n}\n\nexport default MinHeap;","import VertexTypes from '../enums/VertexTypes';\n\nclass Node {\n  row: number;\n  col: number;\n  previous?: Node;\n  distance: number;\n  vertexType: VertexTypes;\n\n\n  constructor(row: number = 0, col: number = 0, distance: number = Infinity, vertexType: VertexTypes = VertexTypes.VERTEX) {\n    this.distance = distance;\n    this.row = row;\n    this.col = col;\n    this.previous = undefined;\n    this.vertexType = vertexType;\n  }\n\n  setPrevious(previous: Node) {\n    this.previous = previous;\n  }\n\n  isStartVertex(): boolean {\n    return this.vertexType === VertexTypes.START_VERTEX;\n  }\n\n  isEndVertex(): boolean {\n    return this.vertexType === VertexTypes.END_VERTEX;\n  }\n\n  isWall(): boolean {\n    return this.vertexType === VertexTypes.WALL;\n  }\n}\n\nexport default Node;","import { Node } from '../collections';\nimport { MinHeap } from '../collections';\n\nclass Dijkstra {\n  grid: Node[][];\n  minHeap: MinHeap<Node>;\n  startNode: Node;\n  endNode: Node;\n\n  gridRows: number;\n  gridCols: number;\n\n  constructor(grid: Node[][], startNode: Node, endNode: Node) {\n    this.grid = grid;\n    this.minHeap = new MinHeap<Node>((value: Node) => value.distance);\n    this.startNode = startNode;\n    this.endNode = endNode;\n\n    this.gridRows = grid.length;\n    this.gridCols = grid[0].length;\n  }\n\n  shortestPath(): { shortestPath: Array<Node>, visitedNodes: Array<Node> } | undefined {\n    // Fill the min heap.\n    this.minHeap.insert(this.startNode);\n    let visitedNodes: Array<Node> = [];\n    do {\n      let vertice = this.minHeap.remove();\n      if(!vertice) return undefined;\n      let verticeNeighbors = this.getNeighbors(vertice);\n      for(let i=0; i<verticeNeighbors.length; i++) {\n        // Here we are using weight 1 as a default value.\n        // This is the weight to go from one cell to another.\n        if(verticeNeighbors[i].distance > vertice.distance + 1 && !verticeNeighbors[i].isWall()) {\n          this.minHeap.insert(verticeNeighbors[i]);\n          if(!verticeNeighbors[i].isEndVertex()) {\n            visitedNodes.push(verticeNeighbors[i]);\n          }\n          verticeNeighbors[i].distance = vertice.distance + 1;\n          verticeNeighbors[i].previous = vertice;\n        }\n      }\n    } while(!this.minHeap.peek()?.isEndVertex())\n\n    let currentNode = this.grid[this.endNode.row][this.endNode.col];\n    let shortestPath: Array<Node> = []\n    while(currentNode.previous) {\n      currentNode = currentNode.previous;\n      shortestPath.push(currentNode);\n    }\n    console.log(shortestPath);\n    return {\n      visitedNodes,\n      shortestPath\n    };\n  }\n\n  getNeighbors(vertice: Node): Array<Node> {\n    let neighbors = [];\n    if(vertice.row - 1 >= 0) neighbors.push(this.grid[vertice.row - 1][vertice.col]); // Left\n    if(vertice.row + 1 < this.gridRows) neighbors.push(this.grid[vertice.row + 1][vertice.col]); // Right\n    if(vertice.col - 1 >= 0) neighbors.push(this.grid[vertice.row][vertice.col - 1]); // Up\n    if(vertice.col + 1 < this.gridCols) neighbors.push(this.grid[vertice.row][vertice.col + 1]); // Down\n    return neighbors;\n  }\n}\n\nexport default Dijkstra;","// Original JavaScript code by Chirp Internet: chirpinternet.eu\n// Please acknowledge use of this code by including this header.\n\nclass MazeGeneratorRecursiveDivision {\n\n  maze: string[][][]\n\n  width: number;\n  height: number;\n\n  cols: number;\n  rows: number;\n\n  constructor(rows: number, cols: number) {\n\n    /*\n    this.width = width;\n    this.height = height;\n\n    this.cols = 2 * this.width + 1;\n    this.rows = 2 * this.height + 1;*/\n\n    this.width = cols / 2 - 1;\n    this.height = rows / 2 - 1;\n\n    this.rows = rows;\n    this.cols = cols;\n\n    this.maze = this.initArray('');\n\n    // place initial walls\n    this.maze.forEach((row, r) => {\n      row.forEach((cell, c) => {\n        switch(r)\n        {\n          case 0:\n          case this.rows - 1:\n            this.maze[r][c] = [\"wall\"];\n            break;\n\n          default:\n            if((r % 2) == 1) {\n              if((c == 0) || (c == this.cols - 1)) {\n                this.maze[r][c] = [\"wall\"];\n              }\n            } else if(c % 2 == 0) {\n              this.maze[r][c] = [\"wall\"];\n            }\n\n        }\n      });\n\n      if(r == 0) {\n        // place exit in top row\n        let doorPos = this.posToSpace(this.rand(1, this.width));\n        this.maze[r][doorPos] = [\"door\", \"exit\"];\n      }\n\n      if(r == this.rows - 1) {\n        // place entrance in bottom row\n        let doorPos = this.posToSpace(this.rand(1, this.width));\n        this.maze[r][doorPos] = [\"door\", \"entrance\"];\n      }\n\n    });\n\n    // start partitioning\n    this.partition(1, this.height - 1, 1, this.width - 1);\n  }\n\n  initArray(value: string) {\n    return new Array(this.rows).fill([]).map(() => new Array(this.cols).fill([value]));\n  }\n\n  rand(min: number, max: number) {\n    return min + Math.floor(Math.random() * (1 + max - min));\n  }\n\n  posToSpace(x: number) {\n    return 2 * (x-1) + 1;\n  }\n\n  posToWall(x: number) {\n    return 2 * x;\n  }\n\n  inBounds(r: number, c: number) {\n    if((typeof this.maze[r] == \"undefined\") || (typeof this.maze[r][c] == \"undefined\")) {\n      return false; // out of bounds\n    }\n    return true;\n  }\n\n  shuffle(array: boolean[]) {\n    // sauce: https://stackoverflow.com/a/12646864\n    for(let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n  }\n\n  partition(r1: number, r2: number, c1: number, c2: number) {\n    // create partition walls\n    // ref: https://en.wikipedia.org/wiki/Maze_generation_algorithm#Recursive_division_method\n\n    let horiz, vert, x, y, start, end;\n\n    if((r2 < r1) || (c2 < c1)) {\n      return false;\n    }\n\n    if(r1 == r2) {\n      horiz = r1;\n    } else {\n      x = r1+1;\n      y = r2-1;\n      start = Math.round(x + (y-x) / 4);\n      end = Math.round(x + 3*(y-x) / 4);\n      horiz = this.rand(start, end);\n    }\n\n    if(c1 == c2) {\n      vert = c1;\n    } else {\n      x = c1 + 1;\n      y = c2 - 1;\n      start = Math.round(x + (y - x) / 3);\n      end = Math.round(x + 2 * (y - x) / 3);\n      vert = this.rand(start, end);\n    }\n\n    for(let i = this.posToWall(r1)-1; i <= this.posToWall(r2)+1; i++) {\n      for(let j = this.posToWall(c1)-1; j <= this.posToWall(c2)+1; j++) {\n        if((i == this.posToWall(horiz)) || (j == this.posToWall(vert))) {\n          this.maze[i][j] = [\"wall\"];\n        }\n      }\n    }\n\n    let gaps = this.shuffle([true, true, true, false]);\n\n    // create gaps in partition walls\n\n    if(gaps[0]) {\n      let gapPosition = this.rand(c1, vert);\n      this.maze[this.posToWall(horiz)][this.posToSpace(gapPosition)] = [];\n    }\n\n    if(gaps[1]) {\n      let gapPosition = this.rand(vert+1, c2+1);\n      this.maze[this.posToWall(horiz)][this.posToSpace(gapPosition)] = [];\n    }\n\n    if(gaps[2]) {\n      let gapPosition = this.rand(r1, horiz);\n      this.maze[this.posToSpace(gapPosition)][this.posToWall(vert)] = [];\n    }\n\n    if(gaps[3]) {\n      let gapPosition = this.rand(horiz+1, r2+1);\n      this.maze[this.posToSpace(gapPosition)][this.posToWall(vert)] = [];\n    }\n\n    // recursively partition newly created chambers\n\n    this.partition(r1, horiz-1, c1, vert-1);\n    this.partition(horiz+1, r2, c1, vert-1);\n    this.partition(r1, horiz-1, vert+1, c2);\n    this.partition(horiz+1, r2, vert+1, c2);\n\n  }\n}\n\nexport default MazeGeneratorRecursiveDivision;","import React, { useEffect, useState } from 'react';\n\nimport { VertexTypes } from '../../enums';\nimport { Dijkstra, MazeGeneratorRecursiveDivision  } from '../../algorithms';\nimport { Node } from '../../collections';\nimport { NodeUI } from '.';\n\nimport { cloneDeep } from 'lodash';\n\nfunction DataStructureVisualizer() {\n\n  const GRID_SIZE: string = '27px';\n\n  const ROWS: number = 21;\n  const COLS: number = 31;\n\n  let [startRow, setStartRow] = useState(ROWS/2);\n  let [startCol, setStartCol] = useState(1);\n\n  let [endRow, setEndRow] = useState(ROWS/2);\n  let [endCol, setEndCol] = useState(COLS - 2);\n\n  let [grid, setGrid] = useState(Array.from(Array(ROWS), () => new Array(COLS)));\n  let [visitedNodes, setVisitedNodes] = useState(Array<Node>());\n  let [insertWall, setInsertWall] = useState(false);\n\n  useEffect(() => {\n    startGrid();\n  }, [])\n\n\n  let startGrid = () => {\n    let tmpGrid = Array.from(Array(ROWS), () => new Array(COLS));\n    for(let i = 0; i<tmpGrid.length; i++) {\n      for(let j=0; j<tmpGrid[i].length; j++) {\n        if(i === startRow && j=== startCol) tmpGrid[i][j] = new Node(i, j, 0, VertexTypes.START_VERTEX);\n        else if(i === endRow && j=== endCol) tmpGrid[i][j] = new Node(i, j, Infinity, VertexTypes.END_VERTEX);\n        else tmpGrid[i][j] = new Node(i, j);\n      }\n    }\n    setGrid(tmpGrid);\n  }\n\n  const solvePath = (e: any) => {\n    if(visitedNodes.length > 0) {\n      console.log('RESET');\n      return;\n    }\n\n    console.log(grid);\n    const dijkstra = new Dijkstra(grid, grid[startRow][startCol], grid[endRow][endCol]);\n    const paths = dijkstra.shortestPath();\n    if(!paths) return;\n    setVisitedNodes(paths.visitedNodes);\n    let newGrid = cloneDeep(grid);\n    paths.visitedNodes.forEach((n,i) => {\n      setTimeout(() => {\n        newGrid = cloneDeep(newGrid);\n        newGrid[n.row][n.col] = new Node(n.row,n.col,n.distance,VertexTypes.VISITED_VERTICE);\n        newGrid[n.row][n.col].previous = n.previous;\n        setGrid(newGrid);\n        if(i === paths.visitedNodes.length - 1) {\n          setTimeout(() => {\n            animateShortestPath(cloneDeep(newGrid), paths.shortestPath)\n          }, 2000);\n        }\n      }, i * 40);\n    });\n  }\n\n  const animateShortestPath = (newGrid: Node[][] , shortestPath: Array<Node>) => {\n    shortestPath.pop();\n    shortestPath.forEach((n,i) => {\n      setTimeout(() => {\n        newGrid = cloneDeep(newGrid);\n        newGrid[n.row][n.col] = new Node(n.row,n.col,n.distance,VertexTypes.SHORT_PATH);\n        newGrid[n.row][n.col].previous = n.previous;\n        setGrid(newGrid);\n      }, i * 40);\n    });\n  }\n\n  const reset = () => {\n    startGrid();\n    setVisitedNodes(Array<Node>());\n  }\n\n  const generateRandomMaze = () => {\n    let newGrid = cloneDeep(grid);\n    let mazeGenerator = new MazeGeneratorRecursiveDivision(ROWS,COLS);\n    console.log(mazeGenerator.maze);\n    /*let result = mazeGenerator.initArray;\n    if(!result) return;*/\n    console.log(mazeGenerator.maze);\n    mazeGenerator.maze.forEach((row, rIdx) => {\n      row.forEach((col, cIdx) => {\n        if(col.includes('entrance')) {\n          newGrid[rIdx][cIdx].vertexType = VertexTypes.START_VERTEX;\n          newGrid[rIdx][cIdx].distance = 0;\n          setStartCol(cIdx);\n          setStartRow(rIdx);\n          console.log('START ROW ' + rIdx);\n          console.log('START COL ' + cIdx);\n        } else if(col.includes('exit')) {\n          newGrid[rIdx][cIdx].vertexType = VertexTypes.END_VERTEX;\n          newGrid[rIdx][cIdx].distance = Infinity;\n          setEndCol(cIdx);\n          setEndRow(rIdx);\n          console.log('END ROW ' + rIdx);\n          console.log('END COL ' + cIdx);\n        } else if(col.includes('wall')) {\n          console.log('WALL ROW ' + rIdx);\n          console.log('WALL COL ' + cIdx);\n          newGrid[rIdx][cIdx].vertexType = VertexTypes.WALL;\n          newGrid[rIdx][cIdx].distance = Infinity;\n        } else {\n          newGrid[rIdx][cIdx].vertexType = VertexTypes.VERTEX;\n          newGrid[rIdx][cIdx].distance = Infinity;\n        }\n      });\n    });\n    setGrid(newGrid);\n  }\n\n  const onMouseDown = (e: any) => {\n    setInsertWall(true);\n  }\n\n  const onMouseUp = (e: any) => {\n    setInsertWall(false);\n  }\n\n  const onMouseMove = (row: number, col: number) => {\n    if(insertWall && grid[row][col].vertexType !== VertexTypes.WALL) {\n      let newGrid = cloneDeep(grid);\n      newGrid[row][col].vertexType = VertexTypes.WALL;\n      setGrid(newGrid);\n    }\n  }\n\n  return(\n    <div style={{ background: `linear-gradient(to bottom, rgba(0, 0, 0, 0.3) 0%, rgba(0, 0, 0, 0.7) 75%, #000000 100%)` }}>\n      <div style={{ display:'flex', alignItems:'center', justifyContent:'center', paddingTop: '6rem' }}>\n        <button className=\"btn btn-primary\" style={{ margin: '1em' }} onClick={solvePath}>Solve Path</button>\n        <button className=\"btn btn-primary\" style={{ margin: '1em' }} onClick={reset}>Reset</button>\n        <button className=\"btn btn-primary\" style={{ margin: '1em' }} onClick={generateRandomMaze}>Random Maze</button>\n      </div>\n      <div className=\"flex-container-centered\">\n        <div \n        className=\"grid-container\" \n        style={{ gridTemplateColumns: `repeat(${COLS}, ${GRID_SIZE})`, gridAutoRows: GRID_SIZE }}\n        onMouseDown={onMouseDown} onMouseUp={onMouseUp} onMouseLeave={onMouseUp}>\n          { grid.map((row,i) => row.map((col: Node, j) => \n          <NodeUI\n           row={i} \n           col={j} \n           type={col.vertexType} \n           key={`node[${i}][${j}][${col.vertexType}]`}\n           onMouseMove={onMouseMove} />))}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default DataStructureVisualizer;","import React from 'react';\nimport './App.css';\nimport './utils/scripts';\n\nimport { Header, Footer, Home } from './components/portfolio';\n\nimport { DataStructureVisualizer } from './components/data_structure_visualizer';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect\n} from \"react-router-dom\";\n\nfunction App() {\n\n  return (\n    <Router>\n      <Header/>\n      <Switch>\n        <Route path=\"/portfolio/dijkstra\">\n          <DataStructureVisualizer/>\n        </Route>\n        <Route path=\"/portfolio\">\n          <Home/>\n        </Route>\n        <Route path=\"/\">\n          <Redirect to=\"/portfolio\" />\n        </Route>\n      </Switch>\n      <Footer/>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}